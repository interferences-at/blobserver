#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.68)
AC_INIT([BLOBSERVER],
        [0.2.3],
        [http://code.sat.qc.ca/redmine/projects/blobserver/issues],
        [blobserver],
        [http://code.sat.qc.ca/redmine/projects/blobserver])
AC_CONFIG_MACRO_DIR([m4])
AC_PROG_LIBTOOL
AM_INIT_AUTOMAKE()
AC_CONFIG_HEADERS([config.h])

# Check for C and C++ compilers
AC_PROG_CXX
AC_PROG_CC

AC_MSG_CHECKING([to see if compiler understands -std=gnu++0x])
CXXFLAGS="$CFLAGS -std=gnu++0x"
AC_COMPILE_IFELSE([AC_LANG_PROGRAM([ ], [ ])], [
  CXXFLAGS="$CFLAGS -std=gnu++0x"
  AC_MSG_RESULT([yes])
], [
  AC_MSG_RESULT([no])
  AC_MSG_ERROR([compiler does not understand -std=c++0x])
])



# Check for header files
########################
# Absolutely needed libs
AC_HEADER_STDC

# GLib
PKG_CHECK_MODULES([GLIB], glib-2.0, have_glib=true, have_glib=false)
if test "x${have_glib}" = "xfalse" ; then
    AC_MSG_ERROR([Missing glib])
fi

# OpenCV
PKG_CHECK_MODULES([OPENCV], [opencv >= 2.3])
if test "x${have_opencv}" = "xfalse" ; then
    AC_MSG_ERROR([Missing opencv])
fi

# Liblo
PKG_CHECK_MODULES([LIBLO], [liblo >= 0.26])
if test "x${have_liblo}" = "xfalse" ; then
    AC_MSG_ERROR([Missing liblo])
fi

# LCMS
PKG_CHECK_MODULES([LCMS], [lcms.pc >= 2.2])
if test "x${have_lcms}" = "xfalse" ; then
    AC_MSG_ERROR([Missing lcms])
fi

# LibAtom
PKG_CHECK_MODULES([LIBATOM], atom-0.1)
if test "x${have_atom}" = "xfalse" ; then
    AC_MSG_ERROR([Missing atom])
fi

###############
# Optional libs
# OpenNI && NITE
AC_CHECK_LIB([OpenNI],[xnGetVersion],[have_openni=true] [OPENNI_LIBS="-lOpenNI"] [OPENNI_CFLAGS="-I/usr/include/ni"], AC_MSG_WARN([Missing OpenNI]))
if test "x${have_openni}" = "xtrue" ; then
    AC_DEFINE([WITH_OPENNI],[1],[Enables linking with OpenNI])
    AC_MSG_NOTICE([Enabled support for OpenNI])
    AM_CONDITIONAL(OPENNI, [true])
    AC_SUBST(OPENNI_LIBS)
    AC_SUBST(OPENNI_CFLAGS)
else
    AM_CONDITIONAL(OPENNI, [false])
fi

# GNU help2man creates man pages from --help output; in many cases, this
# is sufficient, and obviates the need to maintain man pages separately.
# However, this means invoking executables, which we generally cannot do
# when cross-compiling, so we test to avoid that (the variable
# "cross_compiling" is set by AC_PROG_CC).
if test $cross_compiling = no; then
    AM_MISSING_PROG(HELP2MAN, help2man)
else
    HELP2MAN=:
fi

AC_CONFIG_FILES([
    Makefile
    src/Makefile
    man/Makefile
    ])
AC_OUTPUT

